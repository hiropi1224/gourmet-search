import { useState } from 'react';
import { Badge, Box, Button, Card, Group, Grid, TextInput, Image, Text } from '@mantine/core';
import { useForm } from '@mantine/form';
import Head from 'next/head';
import { Results, Root } from '@/types';

export default function Home(): JSX.Element {
  const [gourmet, setGourmet] = useState<Results>();
  const form = useForm({
    initialValues: {
      keyword: '',
    },

    validate: {
      keyword: (value) => (value.length < 1 ? '入力してください' : null),
    },
  });

  const onSubmit = (values: { keyword: string }) => {
    const params = { keyword: values.keyword };
    const query = new URLSearchParams(params);

    const request = async () => {
      const res = await fetch(`/api/search?${query}`);
      const data: Root = await res.json();

      setGourmet(data.results);
    };

    request();
    values.keyword = '';
  };

  return (
    <>
      <Head>
        <title>グルメサーチ</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <Box sx={{ maxWidth: 300 }} mx='auto'>
        <form onSubmit={form.onSubmit((values) => onSubmit(values))}>
          <TextInput
            label='検索キーワード'
            placeholder='キーワード'
            {...form.getInputProps('keyword')}
          />

          <Group position='center' my='md'>
            <Button type='submit' color='cyan'>
              検索
            </Button>
          </Group>
        </form>
      </Box>
      {gourmet && (
        <Grid>
          {gourmet.shop.map((ctx) => (
            <Grid.Col span={4} key={ctx.id}>
              <Card shadow='sm' p='lg' radius='md' withBorder>
                <Card.Section>
                  <Image src={ctx.photo.pc.l} height={160} alt='Norway' />
                </Card.Section>

                <Group position='apart' mt='md' mb='xs'>
                  <Text weight={500}>{ctx.name}</Text>
                  <Badge color='pink' variant='light'>
                    {ctx.genre.name}
                  </Badge>
                </Group>
                <Text size='sm' color='dimmed'>
                  平均ディナー予算
                </Text>
                <Text size='sm'>{ctx.budget.average ? ctx.budget.average : '記載なし'}</Text>
              </Card>
            </Grid.Col>
          ))}
        </Grid>
      )}
    </>
  );
}
